name: Crash Report
description: One report per scenario
labels: ["crash-report"]
body:
  - type: dropdown
    id: scenario
    attributes:
      label: Scenario
      description: Select the scenario you investigated. See project documentation for details.
      options:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
    validations:
      required: true
  
  - type: dropdown
    id: pattern
    attributes:
      label: Crash Pattern
      description: Select the crash pattern that best matches the issue you investigated. See Crash Patterns slides for details.
      options:
        - Null Data Pointer Dereference
        - Null Class/Struct Pointer Dereference
        - Out of Bounds - Access Violation (read)
        - Out of Bounds - Access Violation (write)
        - Null Function Pointer Call
        - Bad Function Pointer Call
        - Bad Virtual Function Call
        - Corrupt Return Address
        - Incorrect Call Stack
        - Stack Overflow
        - Division by Zero
        - Uncaught C++ Exception
    validations:
      required: true
  
  - type: textarea
    id: exception_code
    attributes:
      label: Exception code
      description: Copy/Paste the Exception Code from the Visual Studio Exception Assistant window.
      render: text
      placeholder: "0xC0000005"
    validations:
      required: true
  
  - type: textarea
    id: instruction
    attributes:
      label: Crashing Instruction
      description: Copy/Paste the crashing instruction from the Visual Studio Disassembly window.
      render: asm
      placeholder: "idiv eax, ecx"
    validations:
      required: true

  - type: textarea
    id: why
    attributes:
      label: Why is this the pattern?
      description: Briefly justify your pattern selection (2–4 sentences).
      placeholder: "I chose Null pointer deref because …"
    validations:
      required: true

  - type: textarea
    id: reason
    attributes:
      label: Root Cause Summary
      description: 2–4 sentences explaining what went wrong and why (tie to frames/instruction).
      placeholder: "Likely null pointer passed into dllX!Foo from …"
    validations:
      required: true

  - type: textarea
    id: stacktrace
    attributes:
      label: Call stack
      description: Copy/Paste the Call Stack from the Visual Studio Call Stack window.
      render: c++
      placeholder: |
        dllX!Foo+0x30
        dllX!Bar+0x120
        app!Main+0x90
    validations:
      required: true

  - type: checkboxes
    id: evidence
    attributes:
      label: Evidence reviewed
      description: What did you use to trace the issue? (check all that apply)
      options:
        - label: Registers
        - label: Stack memory
        - label: Heap memory
        - label: Disassembly
        - label: Call stack
        - label: Modules window
        - label: Live debugger (tracing)
        - label: Other (noted in Additional Context)
    validations:
      required: true

  - type: textarea
    id: additional
    attributes:
      label: Additional Context (optional)
      placeholder: "Anything noteworthy for partial credit."

  - type: textarea
    id: fix
    attributes:
      label: Potential Fix / Mitigation
      description: 1–2 sentences.
      placeholder: "Add null-check in dllX!Foo; validate input in caller…"
    validations:
      required: true

  - type: textarea
    id: extra
    attributes:
      label: Extra Credit (optional)
      description: Scenarios 1, 2, 6, and 7 only.  See project documentation.
      placeholder: "Anything noteworthy for extra credit."

  - type: textarea
    id: time
    attributes:
      label: Time Spent (hours)
      placeholder: "3.5 hours"
    validations:
      required: true
